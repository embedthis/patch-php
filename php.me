/*
    php.me - PHP MakeMe file

    # apt-get install build-essential curl libxml2-dev libdb-dev libz-dev libcurl4-gnutls-dev
    # apt-get install libmysqlclient15-dev

    sudo apt-get install \
        libxml2-dev \
        libcurl4-openssl-dev \
        libjpeg-dev \
        libpng-dev \
        libxpm-dev \
        libmysqlclient-dev \
        libpq-dev \
        libicu-dev \
        libfreetype6-dev \
        libldap2-dev \
        libxslt-dev
 */

Me.load({
    targets: {
        'pak-postcache': {
            action: `
                trace('Build', 'PHP libraries')
                if (Config.OS == 'windows') {
                    function cmd(command) {
                        let os = Config.CPU == 'x64' ? 'x86_amd64' : 'x86'
                        sh('windows.bat ' + os + ' ' + command)
                    }
                    for each (f in Path('.').files('*.obj')) {
                        f.remove()
                    }
                    Path('Debug_TS').removeAll()
                    Path('Release_TS').removeAll()
                    cmd('buildconf')
                    Path('thisconfig.bat').write('cscript /nologo configure.js --disable-debug --without-gd --disable-bcmath --disable-calendar --disable-com-dotnet --disable-filter --disable-json --disable-ipv6 --disable-odbc --disable-tokenizer --disable-zlib --disable-ftp --enable-embed --enable-zts --without-dom --without-libxml --without-iconv --without-simplexml --without-xml --without-mysqlnd')
                    cmd('thisconfig')
                    cmd('nmake clean')
                    cmd('nmake')

                } else {
                    trace('Patch', 'PHP')
                    if (!Path('./configure').exists) {
                        sh('buildconf --force')
                    }
                    sh('chmod +x configure build/shtool')
                    for each (f in Path('.').files('*.patch')) {
                        sh('patch < ' + f)
                    }
                    if (Config.OS == 'macosx') {
                        //  PHP 5.6 cannot use bison 3
                        sh('./configure --disable-debug --disable-rpath --disable-cli --enable-bcmath --enable-calendar --enable-maintainer-zts --enable-embed=shared --enable-ftp --enable-inline-optimization --enable-sockets --enable-wddx --sysconfdir=/etc/appweb --with-pic --with-pear --with-xmlrpc --with-zlib --with-curl=/usr/local/opt/curl --with-iconv=/usr/local/opt/libiconv')
                    } else {
                        trace('Info', 'Must have installed these packages')
                        trace('Packages', 'apt-get install build-essential curl libxml2-dev libdb-dev libz-dev')
                        trace('Packages', 'apt-get install libcurl4-gnutls-dev libmysqlclient15-dev')
                        sh('./configure --disable-debug --disable-rpath --disable-cli --enable-bcmath --enable-calendar --enable-maintainer-zts --enable-embed=shared --enable-ftp --enable-inline-optimization --enable-sockets --enable-wddx --sysconfdir=/etc/appweb --with-pic --with-regex=system --with-pear --with-xmlrpc --with-zlib --with-curl')
                    }
                    sh('make clean')
                    let major = App.dir.basename.name.split('.')[0]
                    sh('make libphp' + major + '.la')
                }
            `
        },
        makepatch: {
            /* Format patch from the embedthis branch to development */
            shell: `diff -Naur configure.orig configure >../patch-mbedtls/embedthis.patch`
        },
    }
})
